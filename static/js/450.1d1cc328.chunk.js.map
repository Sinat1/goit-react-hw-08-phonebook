{"version":3,"file":"static/js/450.1d1cc328.chunk.js","mappings":"+MACA,EAA8B,iCAA9B,EAA2E,+BAA3E,EAAsH,+BAAtH,EAA+J,6B,oBCClJA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEpBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACX,EAAgBQ,IACjB,SAACN,EAAUO,GACT,IAAMG,EAAmBH,EAAOI,cAChC,OAAOX,EAASO,QAAO,SAAAK,GAAI,OACzBA,EAAKC,KAAKF,cAAcG,SAASJ,EADR,GAG5B,I,mBC4CH,EAvDoB,WAClB,IAAMK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYpB,GAsB7B,OACE,kBAAMqB,UAAWC,EAAiBC,SArBf,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OAAOC,SACpBC,GAAKC,EAAAA,EAAAA,MACLf,EAAOW,EAAKX,KAAKgB,MACjBC,EAAQN,EAAKO,OAAOF,MACpBG,EAAUf,EAASgB,MAAK,SAAAC,GAAI,OAAIA,EAAKrB,OAASA,CAAlB,IAClCS,EAAMG,OAAOU,QACb,IAAMC,EAAYnB,EAASgB,MAAK,SAAAC,GAAI,OAAIA,EAAKJ,QAAUA,CAAnB,IAEpC,OAAIE,EACKK,MAAM,GAAD,OAAIL,EAAQnB,KAAZ,4BACHuB,EACFC,MAAM,GAAD,OAAID,EAAUN,MAAd,4BAELf,GAASuB,EAAAA,EAAAA,IAAW,CAAEX,GAAAA,EAAId,KAAAA,EAAMiB,MAAAA,IAE1C,EAGC,WACE,mBAAOX,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXmB,KAAK,OACL1B,KAAK,OACL2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOvB,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXmB,KAAK,MACL1B,KAAK,SACL2B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQvB,UAAWC,EAAamB,KAAK,SAArC,2BAKL,EC1DD,EAA8B,iCAA9B,EAAmF,uCAAnF,EAA6I,sCCiC7I,EA7BoB,WAClB,IAAMxB,GAAWC,EAAAA,EAAAA,MAEX2B,GAAkBzB,EAAAA,EAAAA,IAAYV,GAMpC,OACE,eAAIW,UAAWC,EAAf,SACGuB,EAAgBC,KAAI,SAAAC,GACnB,OACE,gBAAI1B,UAAWC,EAAf,UACGyB,EAAQhC,KADX,KACmBgC,EAAQf,OACzB,mBACEX,UAAWC,EACXmB,KAAK,SACLO,QAAS,kBAbCC,EAamBF,EAAQlB,QAZ/CZ,GAASiC,EAAAA,EAAAA,IAAcD,IADH,IAAAA,CAaD,EAHX,sBAFyCF,EAAQlB,GAWtD,KAGN,EC/BD,EAA8B,4BAA9B,EAAwE,4B,UC0BxE,EAtBe,WACb,IAAMpB,GAASW,EAAAA,EAAAA,IAAYZ,GACrBS,GAAWC,EAAAA,EAAAA,MAOjB,OACE,mBAAOG,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXmB,KAAK,OACLV,MAAOtB,EAAOsB,MACdoB,SAZsB,SAAA3B,GAC1B,IAAQO,EAAUP,EAAMG,OAAhBI,MACRd,GAASmC,EAAAA,EAAAA,IAAarB,GACvB,MAaF,E,mBCvBYsB,E,QAAUC,GAAAA,IAAH,oKCCPC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,oBAIpB,ECfD,EAAsB,iBAAtB,EAAmD,uBAAnD,EAAoF,qBCSvEC,EAAW,WACtB,IAAM7C,GAAWC,EAAAA,EAAAA,MACXb,GAAYe,EAAAA,EAAAA,IAAYhB,GACxBG,GAAQa,EAAAA,EAAAA,IAAYd,GAM1B,OAJAyD,EAAAA,EAAAA,YAAU,WACR9C,GAAS+C,EAAAA,EAAAA,MACV,GAAE,CAAC/C,KAGF,iBAAKI,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,wBACA,SAAC,EAAD,KACA,qCACCjB,IAAcE,IAAS,SAACgD,EAAD,KACxB,iBAAKlC,UAAWC,EAAhB,WACE,SAAC,EAAD,KACA,SAAC,EAAD,SAIP,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/App/App.module.css?583a","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { nanoid } from 'nanoid';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector(selectContacts);\n\n  const handleSumbit = event => {\n    event.preventDefault();\n\n    const form = event.target.elements;\n    const id = nanoid();\n    const name = form.name.value;\n    const phone = form.number.value;\n    const NewName = selector.find(data => data.name === name);\n    event.target.reset();\n    const NewNumber = selector.find(data => data.phone === phone);\n\n    if (NewName) {\n      return alert(`${NewName.name} is already in contacts`);\n    } else if (NewNumber) {\n      return alert(`${NewNumber.phone} is already in contacts`);\n    } else {\n      return dispatch(addContact({ id, name, phone }));\n    }\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSumbit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactList__item\":\"ContactList_contactList__item__2K2vx\",\"contactList__btn\":\"ContactList_contactList__btn__Q+Zz6\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const removeContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul className={css.contactList}>\n      {visibleContacts.map(contact => {\n        return (\n          <li className={css.contactList__item} key={contact.id}>\n            {contact.name}: {contact.phone}\n            <button\n              className={css.contactList__btn}\n              type=\"button\"\n              onClick={() => removeContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\n// const selector = useSelector(selectContacts);\n// const contact = useSelector(selectFilter);\n\n// const getVisibleContacts = () => {\n//   const normalizedFilter = contact.toLowerCase();\n//   return selector.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import css from './Filter.module.css';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterChangeHandler = event => {\n    const { value } = event.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        value={filter.value}\n        onChange={filterChangeHandler}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100vh;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Blocks } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <Wrapper>\n      <Blocks\n        visible={true}\n        height=\"150\"\n        width=\"150\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n    </Wrapper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"App_app__6Ra7L\",\"pageTitle\":\"App_pageTitle__naQ4s\",\"wrapper\":\"App_wrapper__50AJ9\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport css from '../components/App/App.module.css';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.app}>\n      <h1 className={css.pageTitle}>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoading && !error && <Loader />}\n      <div className={css.wrapper}>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","item","name","includes","dispatch","useDispatch","selector","useSelector","className","css","onSubmit","event","preventDefault","form","target","elements","id","nanoid","value","phone","number","NewName","find","data","reset","NewNumber","alert","addContact","type","pattern","title","required","visibleContacts","map","contact","onClick","contactId","deleteContact","onChange","changeFilter","Wrapper","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Contacts","useEffect","fetchContacts"],"sourceRoot":""}