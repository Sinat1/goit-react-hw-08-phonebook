{"version":3,"file":"static/js/656.1525240f.chunk.js","mappings":"gOAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,MAAV,EAEpBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACX,EAAgBQ,IACjB,SAACN,EAAUO,GACT,IAAMG,EAAmBH,EAAOI,cAChC,OAAOX,EAASO,QAAO,SAAAK,GAAI,OACzBA,EAAKC,KAAKF,cAAcG,SAASJ,EADR,GAG5B,I,oEC4EH,EAvFoB,WAClB,IAAMK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYpB,GAuB7B,OACE,SAACqB,EAAA,EAAD,CACEC,GAAI,CACFC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXC,WAAW,QALf,UAQE,UAACC,EAAA,EAAD,CACEC,UAAU,OACVN,GAAI,CACFC,QAAQ,OACRM,cAAc,SACdL,eAAe,SACfC,WAAW,SACXK,MAAM,QACNC,OAAO,QACPC,UAAU,wGAEVC,gBAAgB,WAElBC,SA3Ce,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OAAOC,SACpBxB,EAAOsB,EAAKtB,KAAKyB,MACjBC,EAASJ,EAAKI,OAAOD,MACrBE,EAAUvB,EAASwB,MAAK,SAAAC,GAAI,OAAIA,EAAK7B,OAASA,CAAlB,IAClCoB,EAAMG,OAAOO,QACb,IAAMC,EAAY3B,EAASwB,MAAK,SAAAC,GAAI,OAAIA,EAAKH,SAAWA,CAApB,IAEpC,OAAIC,EACKK,IAAAA,OAAAA,QAAA,UAA2BL,EAAQ3B,KAAnC,4BACE+B,EACFC,IAAAA,OAAAA,QAAA,UACFD,EAAUL,OADR,4BAIAxB,GAAS+B,EAAAA,EAAAA,IAAW,CAAEjC,KAAAA,EAAM0B,OAAAA,IAEtC,EAWG,WAeE,SAACQ,EAAA,EAAD,CACEC,MAAM,OACNC,QAAQ,WACRC,KAAK,OACLrC,KAAK,OACLsC,QAAQ,yHACRC,MAAM,yIACNhC,GAAI,CAAEQ,MAAM,QAAUyB,cAAc,QACpCC,UAAQ,KAEV,SAACP,EAAA,EAAD,CACEC,MAAM,SACNC,QAAQ,WACRC,KAAK,MACLrC,KAAK,SACLsC,QAAQ,yFACRC,MAAM,+FACNhC,GAAI,CAAEQ,MAAM,QAAUyB,cAAc,QACpCC,UAAQ,KAEV,SAACC,EAAA,EAAD,CACEN,QAAQ,YACR7B,GAAI,CACFW,gBAAgB,YAChByB,MAAM,UACN,UAAW,CACTA,MAAO,SAGXN,KAAK,SATP,6BAgBP,E,mBCnCD,EAlDoB,WAClB,IAAMnC,GAAWC,EAAAA,EAAAA,MAEXyC,GAAkBvC,EAAAA,EAAAA,IAAYV,GAMpC,OACE,eAAIkD,MAAO,CAAE9B,MAAM,QAAU+B,YAAY,IAAMN,cAAc,QAA7D,SACGI,EAAgBG,KAAI,SAAAC,GACnB,OACE,gBACEH,MAAO,CACLrC,QAAS,OACTC,eAAe,gBACfC,WAAW,SACXuC,aAAa,iBACbC,aAAa,OANjB,UAUGF,EAAQhD,KAVX,KAUmBgD,EAAQtB,QACzB,SAACyB,EAAA,EAAD,CACEC,KAAK,QACL7C,GAAI,CACF,UAAW,CACTW,gBAAgB,UAGpBmB,KAAK,SACLgB,QAAS,kBA3BCC,EA2BmBN,EAAQO,QA1B/CrD,GAASsD,EAAAA,EAAAA,IAAcF,IADH,IAAAA,CA2BD,EARX,UAUE,SAACG,EAAA,EAAD,CACElD,GAAI,CACFmD,KAAK,UACL,UAAW,CACTA,KAAK,cAjBRV,EAAQO,GAwBlB,KAGN,E,UCxBD,EAzBe,WACb,IAAM7D,GAASW,EAAAA,EAAAA,IAAYZ,GACrBS,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC+B,EAAA,EAAD,CACEC,MAAM,wBACNC,QAAQ,WACRC,KAAK,OACLZ,MAAO/B,EAAO+B,MACdkC,SAXwB,SAAAvC,GAC1B,IAAQK,EAAUL,EAAMG,OAAhBE,MACRvB,GAAS0D,EAAAA,EAAAA,IAAanC,GACvB,EASGlB,GAAI,CACFsD,UAAU,OACV9C,MAAM,QACNyB,cAAc,SAIrB,E,UCzBYsB,EAAc,WACzB,OACE,SAACxD,EAAA,EAAD,CACEC,GAAI,CACFC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXqD,aAAa,QACbC,WAAW,OACXC,YAAY,QAPhB,UAUE,SAAC,KAAD,CACEC,SAAS,EACTlD,OAAO,MACPD,MAAM,MACNoD,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,oBAIpB,E,UCqDD,EAlEiB,WACf,IAAMnE,GAAWC,EAAAA,EAAAA,MACXb,GAAYe,EAAAA,EAAAA,IAAYhB,GACxBG,GAAQa,EAAAA,EAAAA,IAAYd,GAM1B,OAJA+E,EAAAA,EAAAA,YAAU,WACRpE,GAASqE,EAAAA,EAAAA,MACV,GAAE,CAACrE,KAGF,iCACE,SAACsE,EAAA,EAAD,CACEpC,QAAQ,KACR7B,GAAI,CACFkE,SAAS,OACTC,WAAW,MACX/B,MAAM,UACNhC,WAAW,OACXgE,UAAU,UAPd,6DAYA,SAAC,EAAD,KACA,SAACH,EAAA,EAAD,CACEpC,QAAQ,KACR7B,GAAI,CACFkE,SAAS,OACTC,WAAW,MACX/B,MAAM,UACNhC,WAAW,OACXgE,UAAU,UAPd,sBAYCrF,IAAcE,IAAS,SAACsE,EAAD,KACxB,SAACxD,EAAA,EAAD,CACEC,GAAI,CACFC,QAAQ,OACRM,cAAc,SACdL,eAAe,SACfC,WAAW,SACXC,WAAW,QANf,UASE,UAACL,EAAA,EAAD,CACEC,GAAI,CACFC,QAAQ,OACRO,MAAM,QACND,cAAc,SACdL,eAAe,SACfC,WAAW,SACXO,UAAU,wGAEVC,gBAAgB,WATpB,WAYE,SAAC,EAAD,KACA,SAAC,EAAD,WAKT,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/SmallLoader.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport { Card, Box, TextField, Button } from '@mui/material';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector(selectContacts);\n\n  const handleSumbit = event => {\n    event.preventDefault();\n\n    const form = event.target.elements;\n    const name = form.name.value;\n    const number = form.number.value;\n    const NewName = selector.find(data => data.name === name);\n    event.target.reset();\n    const NewNumber = selector.find(data => data.number === number);\n\n    if (NewName) {\n      return Notiflix.Notify.warning(`${NewName.name} is already in contacts`);\n    } else if (NewNumber) {\n      return Notiflix.Notify.warning(\n        `${NewNumber.number} is already in contacts`\n      );\n    } else {\n      return dispatch(addContact({ name, number }));\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`,\n        paddingTop: `50px`,\n      }}\n    >\n      <Card\n        component=\"form\"\n        sx={{\n          display: `flex`,\n          flexDirection: `column`,\n          justifyContent: `center`,\n          alignItems: `center`,\n          width: `400px`,\n          height: `250px`,\n          boxShadow: `0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2)`,\n          backgroundColor: `#ffffff`,\n        }}\n        onSubmit={handleSumbit}\n      >\n        <TextField\n          label=\"Name\"\n          variant=\"standard\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          sx={{ width: `300px`, paddingBottom: `20px` }}\n          required\n        ></TextField>\n        <TextField\n          label=\"Number\"\n          variant=\"standard\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          sx={{ width: `300px`, paddingBottom: `30px` }}\n          required\n        ></TextField>\n        <Button\n          variant=\"contained\"\n          sx={{\n            backgroundColor: `aliceblue`,\n            color: `#1f1f1f`,\n            '&:hover': {\n              color: '#fff',\n            },\n          }}\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      </Card>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { IconButton } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const removeContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul style={{ width: `400px`, paddingLeft: `0`, paddingBottom: `20px` }}>\n      {visibleContacts.map(contact => {\n        return (\n          <li\n            style={{\n              display: 'flex',\n              justifyContent: `space-between`,\n              alignItems: `center`,\n              borderBottom: `1px solid gray`,\n              borderRadius: `1px`,\n            }}\n            key={contact.id}\n          >\n            {contact.name}: {contact.number}\n            <IconButton\n              size=\"large\"\n              sx={{\n                '&:hover': {\n                  backgroundColor: `white`,\n                },\n              }}\n              type=\"button\"\n              onClick={() => removeContact(contact.id)}\n            >\n              <DeleteForeverIcon\n                sx={{\n                  fill: `#3b5998`,\n                  '&:hover': {\n                    fill: `red`,\n                  },\n                }}\n              />\n            </IconButton>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterChangeHandler = event => {\n    const { value } = event.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <TextField\n      label=\"Find contacts by name\"\n      variant=\"outlined\"\n      type=\"text\"\n      value={filter.value}\n      onChange={filterChangeHandler}\n      sx={{\n        marginTop: `15px`,\n        width: `400px`,\n        paddingBottom: `20px`,\n      }}\n    ></TextField>\n  );\n};\n\nexport default Filter;\n","import { Blocks } from 'react-loader-spinner';\nimport Box from '@mui/material/Box';\n\nexport const SmallLoader = () => {\n  return (\n    <Box\n      sx={{\n        display: `flex`,\n        justifyContent: `center`,\n        alignItems: `center`,\n        marginBottom: `100vh`,\n        marginLeft: `auto`,\n        marginRight: `auto`,\n      }}\n    >\n      <Blocks\n        visible={true}\n        height=\"150\"\n        width=\"150\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { SmallLoader } from 'components/Loader/SmallLoader';\n// import css from '../components/App/App.module.css';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Typography\n        variant=\"h2\"\n        sx={{\n          fontSize: `35px`,\n          fontWeight: `700`,\n          color: `#1f1f1f`,\n          paddingTop: `50px`,\n          textAlign: `center`,\n        }}\n      >\n        Add new contact in the form below ⬇️\n      </Typography>\n      <ContactForm />\n      <Typography\n        variant=\"h3\"\n        sx={{\n          fontSize: `35px`,\n          fontWeight: `700`,\n          color: `#1f1f1f`,\n          paddingTop: `50px`,\n          textAlign: `center`,\n        }}\n      >\n        Contacts\n      </Typography>\n      {isLoading && !error && <SmallLoader />}\n      <Box\n        sx={{\n          display: `flex`,\n          flexDirection: `column`,\n          justifyContent: `center`,\n          alignItems: `center`,\n          paddingTop: `50px`,\n        }}\n      >\n        <Box\n          sx={{\n            display: `flex`,\n            width: `500px`,\n            flexDirection: `column`,\n            justifyContent: `center`,\n            alignItems: `center`,\n            boxShadow: `0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2)`,\n            backgroundColor: `#ffffff`,\n          }}\n        >\n          <Filter />\n          <ContactList />\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","item","name","includes","dispatch","useDispatch","selector","useSelector","Box","sx","display","justifyContent","alignItems","paddingTop","Card","component","flexDirection","width","height","boxShadow","backgroundColor","onSubmit","event","preventDefault","form","target","elements","value","number","NewName","find","data","reset","NewNumber","Notiflix","addContact","TextField","label","variant","type","pattern","title","paddingBottom","required","Button","color","visibleContacts","style","paddingLeft","map","contact","borderBottom","borderRadius","IconButton","size","onClick","contactId","id","deleteContact","DeleteForever","fill","onChange","changeFilter","marginTop","SmallLoader","marginBottom","marginLeft","marginRight","visible","ariaLabel","wrapperStyle","wrapperClass","useEffect","fetchContacts","Typography","fontSize","fontWeight","textAlign"],"sourceRoot":""}